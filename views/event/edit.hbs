<h1>Edit your Event</h1>

<form action="" method="POST" enctype="multipart/form-data" onsubmit="return validateForm()">
  <label for="create-event">Edit Event Title</label>
  <input required id="create-event" type="text" name="title" placeholder="Event Title" value={{event.title}} >
   
   <!--input type="datetime-local" value="2017-06-13T13:00">
   <input type="datetime-local" value="{{formattedDate}}"-->

  <label for="event-start">Edit the Start Date and Time of your Event</label>
  <input required id="event-start" type="datetime-local" name="date" value="{{formattedStartDate}}">

  <label for="event-end">Edit the End Date and Time of your Event</label>
  <input required id="event-end" type="datetime-local" name="endDate" value="{{formattedEndDate}}" >

  <label for="event-address">Edit the Address of your Event</label>
  <input required id="event-address" type="text" name="address" placeholder="Event Address" value="{{event.address}}" >

  <label for="event-description">Edit your Event Description</label>
  <textarea required id="event-description" name="description" placeholder="Event Description">{{event.description}}</textarea>

  <label for="photo-input">Add a different Photo</label>
  <input id="photo-input" type="file" name="photo" >
  <img src={{event.photo}} alt="Current Photo">

  <div id="map-container" ></div>

  <!--label for="select-latitude">Latitude</label-->
  <input required hidden id="select-latitude" type="text" name="latitude" placeholder="Latitude" value={{event.location.coordinates.[1]}}>

  <!--label for="select-longitude">Longitude</label-->
  <input required hidden id="select-longitude" type="text" name="longitude" placeholder="Longitude" value={{event.location.coordinates.[0]}}>

  <button>Submit Changes</button>
</form>

<form action="/event/{{event._id}}/delete" method="POST" enctype="multipart/form-data">
  <span>Do you want to to remove the event altogether ? </span>
  <button>Remove Event</button>
</form>

<script>

 
  //console.log($endDateTime.value)

  function validateForm(){
    let dateTimeNow = new Date();
    let $startDateTime = document.getElementById('event-start');
    let $endDateTime = document.getElementById('event-end'); 
    let $photo = document.getElementById('photo-input'); 
    const startDateTime = new Date($startDateTime.value);
    const endDateTime = new Date($endDateTime.value);
    if (startDateTime < dateTimeNow) {
      alert('Event Start cannot be in the past');
      return false;
    } else if (startDateTime >= endDateTime) {
        alert('Event End must be after Event Start');
        return false;
      } else {
          return true;
        }
  };

   /*
  $startDateTime.addEventListener('change', event => {
   
     
  console.log($startDateTime.value)
    //console.log(dateTimeNow)
    $startDateTime.setAttribute("min", dateTimeNow);
    
    console.log('start time event: ', $startDateTime);
    
    if ($startDateTime.validity.rangeUnderflow) {
      $startDateTime.setCustomValidity("Start Date Cannot be in the past..");
    } else {
      $startDateTime.setCustomValidity("");
    }

  });

  $endDateTime.addEventListener('change', event => {
    const dateTimeNow = new Date();
    console.log(dateTimeNow)
    $endDateTime = new Date(event.srcElement.value).getTime();
    console.log('end time event: ', $endDateTime);
    if ($endDateTime <= dateTimeNow || $endDateTime <= $startDateTime) {
      alert('end time must be in the future and cannot be smaller than the start time');
    } 
  });
  */
  
  
  let map;
  let marker;

  const $inputLatitude = document.getElementById('select-latitude');
  const $inputLongitude = document.getElementById('select-longitude'); 

  function initMap() {
    const event = {{{json event}}};
    const eventLat = event.location.coordinates[1]
    const eventLng = event.location.coordinates[0]

    const $mapContainer = document.getElementById('map-container');

    map = new window.google.maps.Map($mapContainer, {
      center: {lat: 38.74, lng: -9.14 },
      zoom: 10
    });

    addMarker({lat: eventLat, lng: eventLng}, 'red') 

    map.addListener('click', event => {
      const latitude = event.latLng.lat();
      const longitude = event.latLng.lng();

      $inputLatitude.value = Number(latitude);
      $inputLongitude.value = Number(longitude);

      if(marker) { marker.setMap(null); }

      addMarker( {lat: latitude, lng: longitude} , 'purple');
    });
  }

  function addMarker(latLng, color) {
    let url = "http://maps.google.com/mapfiles/ms/icons/";
    url += color + "-dot.png";

    marker = new google.maps.Marker({
      map: map,
      position: latLng,
      icon: {
        url: url
      }
    });
  }

</script>

{{> mapscript}}

